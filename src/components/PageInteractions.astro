---

---

<script>
  (function () {
    "use strict";

    // Force legacy-collapsed sidebars open (handles cached CSS/old state)
    (function forceOpenSidebar() {
      var s = document.querySelector("[data-sidebar]");
      if (!s) return;
      try {
        localStorage.removeItem("sidebarOpen");
      } catch (e0) {}
      try {
        s.classList.add("active");
        if (s instanceof HTMLElement) {
          s.style.maxHeight = "none";
          s.style.overflow = "visible";
        }
      } catch (e1) {}
    })();

    function toggleActive(elem: Element | null) {
      if (elem) {
        elem.classList.toggle("active");
      }
    }

    // Sidebar is always expanded on mobile/tablet; remove toggle/persistence

    // Testimonials modal
    var testimonialsItem = document.querySelectorAll(
      "[data-testimonials-item]",
    );
    var modalContainer = document.querySelector("[data-modal-container]");
    var modalCloseBtn = document.querySelector("[data-modal-close-btn]");
    var overlay = document.querySelector("[data-overlay]");
    var modalTitle = document.querySelector("[data-modal-title]");
    var modalText = document.querySelector("[data-modal-text]");

    function toggleModal() {
      if (!modalContainer || !overlay) {
        return;
      }
      modalContainer.classList.toggle("active");
      overlay.classList.toggle("active");
    }

    for (var i = 0; i < testimonialsItem.length; i++) {
      testimonialsItem[i].addEventListener(
        "click",
        function (this: Element, e) {
          var target = (e && (e.target as Element)) || null;
          if (target && target.closest("a[data-testimonials-link]")) {
            // Click on a testimonial link should not open the modal
            return;
          }
          var titleEl = this.querySelector("[data-testimonials-title]");
          var textEl = this.querySelector("[data-testimonials-text]");
          if (modalTitle && titleEl) {
            modalTitle.innerHTML = (titleEl as HTMLElement).innerHTML;
          }
          if (modalText && textEl) {
            var raw = textEl.textContent || "";
            var parts = raw.split(/\r?\n+/).filter(function (s: string) {
              return s && s.trim().length > 0;
            });
            var html = "<p>" + parts.join("<br><br>") + "</p>";
            modalText.innerHTML = html;
          }
          var dateAttr = this.getAttribute("data-testimonials-date");
          var dateLabel = this.getAttribute("data-testimonials-date-label");
          var timeEl = modalContainer
            ? modalContainer.querySelector(".testimonials-modal time")
            : null;
          if (timeEl) {
            if (dateAttr) {
              timeEl.setAttribute("datetime", dateAttr);
            }
            if (dateLabel) {
              timeEl.textContent = dateLabel;
            }
          }
          toggleModal();
        },
      );
    }

    if (modalCloseBtn) {
      modalCloseBtn.addEventListener("click", toggleModal);
    }
    if (overlay) {
      overlay.addEventListener("click", toggleModal);
    }

    // SPA tab routing via History API
    var navButtons = document.querySelectorAll("[data-nav-link]");
    var pageArticles = document.querySelectorAll("article[data-page]");

    function setActivePage(page: string) {
      var pageName = (page || "").replace(/^\/+|\/+$/g, "");
      if (!pageName) pageName = "about";
      var allowed = [];
      for (var i = 0; i < pageArticles.length; i++) {
        var a = pageArticles[i];
        if (a) {
          var dp = a.getAttribute("data-page");
          if (dp) allowed.push(dp);
        }
      }
      if (allowed.indexOf(pageName) === -1) {
        pageName = "about";
      }
      for (var j = 0; j < pageArticles.length; j++) {
        var art = pageArticles[j];
        if (!art) continue;
        var isMatch = art.getAttribute("data-page") === pageName;
        art.classList.toggle("active", isMatch);
      }
      for (var k = 0; k < navButtons.length; k++) {
        var btn = navButtons[k];
        if (!btn) continue;
        var target = btn.getAttribute("data-page");
        btn.classList.toggle("active", target === pageName);
      }

      // update document.title based on active tab heading
      try {
        var siteName =
          document.body && document.body.getAttribute("data-site-name");
        var activeArticle = document.querySelector("article[data-page].active");
        var h2 = activeArticle
          ? activeArticle.querySelector(".article-title")
          : null;
        var titlePart =
          h2 && h2.textContent
            ? h2.textContent.trim()
            : pageName.charAt(0).toUpperCase() + pageName.slice(1);
        var finalTitle = siteName ? siteName + " - " + titlePart : titlePart;
        document.title = finalTitle;
      } catch (e) {}
    }

    function navigateTo(page: string, replace: boolean) {
      var path = "/" + (page || "about");
      try {
        if (replace) {
          history.replaceState({ page: page }, "", path);
        } else {
          history.pushState({ page: page }, "", path);
        }
      } catch (e) {}
      setActivePage(page);
    }

    for (var k = 0; k < navButtons.length; k++) {
      (function (btn) {
        btn.addEventListener("click", function (e) {
          e.preventDefault();
          var target = btn.getAttribute("data-page");
          if (target) {
            navigateTo(target, false);
          }
        });
      })(navButtons[k]);
    }

    window.addEventListener("popstate", function (ev) {
      var page =
        (ev && ev.state && ev.state.page) ||
        window.location.pathname.replace(/^\/+|\/+$/g, "");
      setActivePage(page);
    });

    // initialize on load based on URL
    setActivePage(window.location.pathname.replace(/^\/+|\/+$/g, ""));

    // Projects filters (buttons and select)
    var filterButtons = document.querySelectorAll("[data-filter-btn]");
    var filterSelect = document.querySelector("[data-select]");
    var filterSelectValue =
      document.querySelector("[data-select-value]") ||
      document.querySelector("[data-selecct-value]");
    var filterSelectItems = document.querySelectorAll("[data-select-item]");
    var projectCards = document.querySelectorAll(
      ".project-cards .project-card",
    );

    function normalizeCategory(label: any) {
      var t = (label || "").toString().trim().toLowerCase();
      if (t === "all") return "all";
      return t;
    }

    function applyProjectFilter(label: string) {
      var key = normalizeCategory(label);
      for (var i = 0; i < projectCards.length; i++) {
        var card = projectCards[i];
        if (!card) continue;
        var raw = card.getAttribute("data-categories") || "";
        var cats = raw
          .split(",")
          .map(function (s) {
            return normalizeCategory(s);
          })
          .filter(function (s) {
            return !!s && s !== "all";
          });
        var show = key === "all" || cats.indexOf(key) !== -1;
        try {
          if (card instanceof HTMLElement) {
            card.style.display = show ? "" : "none";
          }
        } catch (e) {}
      }
    }

    function setActiveFilterUI(label: string) {
      var lbl = (label || "").toString();
      for (var i = 0; i < filterButtons.length; i++) {
        var btn = filterButtons[i];
        if (!btn) continue;
        var text = (btn.textContent || "").trim();
        btn.classList.toggle("active", text === lbl);
      }
      if (filterSelectValue) {
        filterSelectValue.textContent = lbl;
      }
    }

    for (var i1 = 0; i1 < filterButtons.length; i1++) {
      (function (btn) {
        btn.addEventListener("click", function () {
          var label = (btn.textContent || "").trim();
          setActiveFilterUI(label);
          applyProjectFilter(label);
        });
      })(filterButtons[i1]);
    }

    if (filterSelect) {
      filterSelect.addEventListener("click", function () {
        toggleActive(filterSelect);
      });
    }

    for (var i2 = 0; i2 < filterSelectItems.length; i2++) {
      (function (item) {
        item.addEventListener("click", function () {
          var label = (item.textContent || "").trim();
          setActiveFilterUI(label);
          applyProjectFilter(label);
          if (filterSelect) {
            filterSelect.classList.remove("active");
          }
        });
      })(filterSelectItems[i2]);
    }

    // initialize projects filter to first active or "All"
    (function initProjectFilter() {
      var initial = "All";
      for (var i = 0; i < filterButtons.length; i++) {
        if (filterButtons[i].classList.contains("active")) {
          initial = (filterButtons[i].textContent || "").trim() || initial;
          break;
        }
      }
      setActiveFilterUI(initial);
      applyProjectFilter(initial);
    })();

    // Show/hide navbar based on scroll direction (only below 1024px)
    (function initNavbarAutoHide() {
      var navbar = document.querySelector(".navbar");
      if (!navbar) return;

      var mq = window.matchMedia("(max-width: 1023px)");
      var lastY = window.scrollY || document.documentElement.scrollTop || 0;
      var ticking = false;
      var threshold = 12; // px needed to change state

      function setHidden(hidden: boolean) {
        if (!navbar) return;
        navbar.classList.toggle("nav-hidden", !!hidden);
      }

      function reset() {
        lastY = window.scrollY || document.documentElement.scrollTop || 0;
        setHidden(false);
      }

      function update(stateY: number) {
        if (!mq.matches) {
          // always show on larger screens
          setHidden(false);
          return;
        }
        var y = Math.max(stateY, 0);
        var dy = y - lastY;
        var atTop = y < 20;
        lastY = y;

        if (atTop) {
          setHidden(false);
          return;
        }

        if (dy > threshold) {
          // scrolling down
          setHidden(true);
        } else if (dy < -threshold) {
          // scrolling up
          setHidden(false);
        }
      }

      window.addEventListener(
        "scroll",
        function () {
          if (!ticking) {
            window.requestAnimationFrame(function () {
              update(window.scrollY || document.documentElement.scrollTop || 0);
              ticking = false;
            });
            ticking = true;
          }
        },
        { passive: true },
      );

      // respond to viewport changes immediately
      if (typeof mq.addEventListener === "function") {
        mq.addEventListener("change", reset);
      } else if (typeof mq.onchange === "function") {
        mq.onchange = reset;
      }
      reset();
    })();

    // Theme toggle logic with persistence and cross-tab sync
    (function initThemeToggle() {
      var root = document.documentElement;
      var btn = document.querySelector("[data-theme-toggle]");
      var storageKey = "theme";
      var themeImgs = function () {
        return document.querySelectorAll("[data-theme-img]");
      };

      function getCurrentTheme() {
        var attr = root.getAttribute("data-theme");
        if (attr === "light" || attr === "dark") return attr;
        var prefersDark =
          window.matchMedia &&
          window.matchMedia("(prefers-color-scheme: dark)").matches;
        return prefersDark ? "dark" : "light";
      }

      function applyTheme(theme: string) {
        var t = theme === "light" ? "light" : "dark";
        root.setAttribute("data-theme", t);
        try {
          root.style.colorScheme = t;
        } catch (e1) {}
        try {
          localStorage.setItem(storageKey, t);
        } catch (e2) {}

        // update any theme-aware images
        try {
          var imgs = themeImgs();
          for (var i = 0; i < imgs.length; i++) {
            var img = imgs[i] as HTMLImageElement;
            if (!img) continue;
            var light = img.getAttribute("data-src-light");
            var dark = img.getAttribute("data-src-dark");
            var nextSrc =
              t === "dark"
                ? dark || img.getAttribute("src")
                : light || img.getAttribute("src");
            if (nextSrc && img.getAttribute("src") !== nextSrc) {
              img.setAttribute("src", nextSrc);
            }
          }
        } catch (e3) {}
      }

      if (btn) {
        btn.addEventListener("click", function () {
          var next = getCurrentTheme() === "dark" ? "light" : "dark";
          applyTheme(next);
        });
      }

      // Keep in sync across tabs
      window.addEventListener("storage", function (ev) {
        if (ev && ev.key === storageKey && ev.newValue) {
          applyTheme(ev.newValue);
        }
      });

      // Initialize images on load to match current theme
      (function initThemeImages() {
        applyTheme(getCurrentTheme());
      })();
    })();
  })();
</script>
